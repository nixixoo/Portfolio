import { Component, ChangeDetectionStrategy, signal, computed, inject, OnInit } from '@angular/core';
import { DomSanitizer, SafeHtml } from '@angular/platform-browser';
import lenis from 'lenis';
import { Particles } from "../../components/particles/particles";
import { HomeAnimation } from "../../components/home-animation/home-animation";
import { Card } from "../../components/card/card";
import { Experience } from "../../components/experience/experience";
import { ProjectsService } from "../../services/projects-service";
import { TranslationService } from "../../services/translation-service";
import { LenisService } from "../../services/lenis-service";

// Tech item with sanitized SVG icon
interface TechWithIcon {
  readonly name: string;
  readonly rawSvg: string;
  readonly sanitizedIcon: SafeHtml;
}

// Home page component with project portfolio and technologies
@Component({
  selector: 'app-home',
  imports: [Particles, HomeAnimation, Card, Experience],
  templateUrl: './home.html',
  styleUrls: ['./home.css'],
  changeDetection: ChangeDetectionStrategy.OnPush
})
export class Home implements OnInit {
  
  private readonly projectsService = inject(ProjectsService); // Project data service
  private readonly sanitizer = inject(DomSanitizer); // HTML sanitization service
  private readonly translationService = inject(TranslationService); // Translation service
  private readonly lenisService = inject(LenisService); // Smooth scroll service

  
  private readonly animationCompleted = signal(false); // Entry animation completion state
  private readonly animationFadingOut = signal(false); // Animation fade out state
  private readonly activeCategory = signal<'web' | 'data'>('web'); // Active project category filter
  private readonly isTransitioning = signal(false); // Category transition animation state


  // Initialize smooth scrolling on component load
  ngOnInit(): void {
    this.lenisService.reinitialize();
  }

  // Get translated text for given key
  translate(key: string): string {
    return this.translationService.translate(key);
  }
  // Filter projects based on active category
  private readonly filteredProjects = computed(() => {
    const category = this.activeCategory();
    const allProjects = this.projectsService.translatedProjects();
    
    if (category === 'web') {
      return allProjects.filter(p => 
        p.category === 'web-app' || p.category === 'portfolio' || p.category === 'platform'
      );
    }
    
    if (category === 'data') {
      return allProjects.filter(p => 
        p.category === 'data-analysis'
      );
    }
    
    return allProjects;
  });

  // Transform projects data for card display
  readonly projectCards = computed(() => 
    this.filteredProjects().map(project => ({
      title: project.title,
      description: project.description,
      tags: project.technologies,
      imageUrl: project.imageUrl ?? '',
      projectId: project.id,
      githubUrl: project.githubUrl ?? '',
      liveUrl: project.viewUrl ?? ''
    }))
  );

  // Get total number of projects
  readonly totalProjects = computed(() => 
    this.projectsService.projects().length
  );


  // Get unique technologies with sanitized SVG icons
  readonly uniqueTechnologies = computed((): readonly TechWithIcon[] => {
    const category = this.activeCategory();
    
    const rawTechData = [ // Raw technology data with SVG icons
      {
        name: 'Angular',
        rawSvg: `<svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 24 24"><path fill="currentColor" d="m12 2.5l8.84 3.15l-1.34 11.7L12 21.5l-7.5-4.15l-1.34-11.7zm0 2.1L6.47 17h2.06l1.11-2.78h4.7L15.45 17h2.05zm1.62 7.9h-3.23L12 8.63z"/></svg>`
      },
      {
        name: 'TailwindCSS',
        rawSvg: `<svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 24 24"><path fill="currentColor" d="M12 6c-2.67 0-4.33 1.33-5 4c1-1.33 2.17-1.83 3.5-1.5c.76.19 1.31.74 1.91 1.35c.98 1 2.09 2.15 4.59 2.15c2.67 0 4.33-1.33 5-4c-1 1.33-2.17 1.83-3.5 1.5c-.76-.19-1.3-.74-1.91-1.35C15.61 7.15 14.5 6 12 6m-5 6c-2.67 0-4.33 1.33-5 4c1-1.33 2.17-1.83 3.5-1.5c.76.19 1.3.74 1.91 1.35C8.39 16.85 9.5 18 12 18c2.67 0 4.33-1.33 5-4c-1 1.33-2.17 1.83-3.5 1.5c-.76-.19-1.3-.74-1.91-1.35C10.61 13.15 9.5 12 7 12"/></svg> `
      },
      {
        name: 'TypeScript',
        rawSvg: `<svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 16 16"><path fill="currentColor" d="M9.25 6.51c0 .413.447.648 1.514 1.048c1.052.394 2.486.931 2.486 2.452v.002a2.5 2.5 0 0 1-.224 1.018a2.5 2.5 0 0 1-1.515 1.364c-.33.11-.687.15-1.035.115a2 2 0 0 1-.214.012a2.5 2.5 0 0 1-1.673-.65a2.52 2.52 0 0 1-.838-1.859c0-.202.078-.39.22-.532a.77.77 0 0 1 1.061 0c.142.141.22.33.22.53c0 .952 1.041 1 1.25 1s1.25-.048 1.25-1c0-.413-.447-.648-1.514-1.048c-1.052-.394-2.486-.93-2.486-2.452q.005-.537.224-1.02c.144-.32.351-.605.614-.84a2.5 2.5 0 0 1 .901-.523a2.6 2.6 0 0 1 1.035-.116a2.4 2.4 0 0 1 .987.116a2.54 2.54 0 0 1 1.738 2.381c0 .202-.078.39-.22.532a.77.77 0 0 1-1.061 0a.74.74 0 0 1-.22-.53c0-.952-1.041-1-1.25-1s-1.25.048-1.25 1m-7-2.5h4.5a.749.749 0 0 1 .53 1.28a.74.74 0 0 1-.53.22h-1.5v6.25a.749.749 0 0 1-1.28.53a.74.74 0 0 1-.22-.53V5.51h-1.5a.749.749 0 0 1-.53-1.28a.74.74 0 0 1 .53-.22"/></svg>`
      },
      {
        name: 'Flask',
        rawSvg: `<svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 32 32"><path fill="currentColor" d="M9.563 27.542c-1.219-.964-2.521-1.88-3.406-3.177c-1.87-2.281-3.313-4.922-4.297-7.703c-.594-1.802-.797-3.74-1.563-5.479c-.802-1.255.135-2.635 1.516-3.036c.615-.12 1.698-.698.391-.281c-1.172.854-1.281-.781-.083-.885c.818-.109 1.12-.781.839-1.38c-.875-.573 2.135-1.203.62-2.063c-1.578-1.703 2.208-2.031 1.276-.099c-.224 1.49 2.646-.271 1.979 1.448c.677.823 2.531.188 2.484 1.344c.99.068 1.328.896 2.25.958c.964.438 2.698.776 3.026 1.854c-.953.755-3.156-1.552-3.26.531c.286 3.078.214 6.25 1.339 9.182c.536 1.776 1.828 3.177 2.995 4.557c1.115 1.359 2.625 2.307 4.167 3.115c1.354.635 2.813 1.057 4.286 1.323c.594-.458 1.651-2.156 2.583-1.438c.042.802-1.849 1.682-.089 1.594c1.031-.313 1.75.797 2.604-.203c.781.927 3.26-.594 2.703 1.307c-.755.484-1.859.193-2.615.859c-1.245-.62-2.24.557-3.62.411a26.7 26.7 0 0 1-4.646.385c-2.547-.203-5.151-.286-7.578-1.172c-1.365-.401-2.698-1.177-3.901-1.953zm2.151.932c1.333.573 2.641 1.182 4.104 1.37c2.318.318 4.714.818 7.042.365c-1.052-.479-2.146.188-3.193-.344c-1.26.271-2.609-.068-3.891-.234c-1.453-.646-3.026-1.094-4.391-1.938c-1.698-.62.88.797 1.344.917c1.063.604-1.172-.313-1.484-.563c-.891-.5-1.005-.396-.089.109c.182.109.365.224.557.318zm-2.537-1.797c1.292.479-.005-.906-.599-.828c-.26-.453-1-.745-.479-.984c-.943.323-.984-1.24-1.427-1.021c-.995-.313-.385-1.422-1.568-2.104c-.109-.719-1.177-1.344-1.521-2.432c-.151-.552-1.203-2.151-.557-.667c.552 1.432 1.526 2.656 2.333 3.88c.63 1.161 1.37 2.38 2.516 3.104c.385.37.755.938 1.302 1.052m-3.724-4.088c.042-.193.234.422 0 0m5.271 4.661c.286-.125-.411-.156 0 0m.703.26c-.073-.354-.323.193 0 0m.88.365c.417-.401-.646-.25 0 0m1.506.839c.255-.375-.818-.141 0 0m-2.891-2.016c.646-.422-.844-.005 0 0m.656.328c-.016-.224-.234.099 0 0m3.292 2.057c.531.333 3.094.729 1.49.135c-.266.057-2.974-.766-1.49-.135M9.646 25.01c-.052-.224-.823-.25 0 0m1.531.891c.401-.276-.828-.214 0 0m1.292.792c.573-.214-.932-.219 0 0m-3.448-2.365c.62.479 2.505.063.953-.281c-.708-.38-2.302-.635-1.219.224zm4.318 2.641c.26-.443-1.083-.255 0 0m-1.313-1.047c1.521.432-1.276-.958-.375-.156l.203.089zm2.635 1.521c1.437.016-1.302-.198 0 0m-6.192-3.948c-.057-.266-.354.026 0 0m8.625 5.312c.036-.484-.469.365 0 0M10.922 25c-.089-.255-.448-.01 0 0m-2.318-1.672c.823-.047-1.13-.365 0 0m-2.75-1.776c-.099-.396-.896-.708 0 0m7.214 4.583c-.151-.177-.073.036 0 0m4.484 2.75c-.01-.26-.24.099 0 0m-4.88-3.161c.078-.344-.708-.104 0 0m-3.344-2.125c.609-.063-.984-.411 0 0m5.656 3.516c.953-.38-.938-.188 0 0m-2.942-1.995c1.104.141-1.313-.75-.245-.078zm3.833 2.359c1.031-.62.693 1.443 1.75.172c1.042-.76-.901.943.385.135c.927-.62 2.302.297 3.167.594c.625-.031 1.234.542 1.87.193c1.234-.333-2.406-.49-1.453-1.078c-1.125.328-1.958-.391-2.51-1.115c-1.266-.292-2.724-.938-3.354-2.057c-.26-.417.37.063-.224-.625c-.76-.677-1.141-1.448-1.651-2.271c-.609-.323-.682-1.281-.745-.031c.005-.792-.74-1.323-.917-1.099c-.005-.76.792-.38.234-.943c-.12-.792-.516-1.615-.635-2.505c-.182-.427-.026-1.344-.63-.375c-.219 1.026-.073-1.26.271-.505c.448-.771-.161-.682-.188-.573c.292-.651.188-1.573-.078-1.224c.156-.688.25-2.536-.234-2.208c.292-.719.552-3.297-.708-2.313c-.516.005-1.401.188-1.818.396c1.313.724-.135.26-.667.146c-.068.667-.599.38-1.26.385c1.057.13-.516 1.078-1.125.714c-.786.375.682 1.313.016 1.604c.083.438-1.203-.156-1.104.854c-.766-.323-.104 1.203.276.688c1.302.349.917 1.151.948 1.917c-.208.443-1.042-1.047-.182-.979c-.677-1.099-.75-.396-1.318.115c-.13.036 1.443.729.458 1.073c.865.13.891.891 1.063 1.37c.521.547.417-.599 1.042.057c-.396-.583-2.089-1.641-.729-1.302c-.005-.583-.245-1.057.172-1.042c.417-.75-.432 1.849.5.896c.26-.115.323-.75.792.057c.672.667.24 1.146-.708.536c.167.578 1.271.786 1.063 1.688c.219.797.526.5.797.458c.208.771.328.203.339-.167c.964.208.734.776 1.036 1.177c.661.297-.948-2.031.193-.703c1.193 1.083.448 1.531-.63 1.359c.682-.052.901.922 1.75.885c.776.37 1.302 1.786-.036 1.198c-.464-.417-2.104-.938-.76-.141c1.24.573 2.219.917 3.417 1.635c.849.609 1.224 1.313 1.547 1.448c-.719.344-2.167-.276-1.094-.464c-.667-.12-1.422-.458-.781.375c.547.458 1.932.406 2.182.458c-.214.464-.573.5.01.536c-.651.349.208.401.266.599zm-1.323-3.745c-.396-.417-.5-1.188-.073-.516c.219.089.703 1.266.073.516m4.318 2.74c.245-.01.005.188 0 0m-4.943-3.755c-.016-.62.141.484 0 0m-.432-.573c-.495-.958.63.271 0 0m-5.198-3.594c.292-.078.141.5 0 0m4.141 2.245c.177-.672.208.568 0 0M9.51 18.766c-.203-.37.432.349 0 0m2.511.802c-.469-1.052.333-.573.104.177zm-4.328-2.886c-.208-.344-.557-1.359-.443-1.667c.099.5 1.068 2.167.474.688c-.656-1.24.786.401.938.714c.068.307-.406-.083-.089.635c-.583-.823-.344.453-.88-.37m-1.339-.922c.057-.802.307.552 0 0m.604.209c.286-.609.484.844 0 0m-1.448-1.12c-.5-.495-.859-.953.021-.307c.344.01-.75-1.036.083-.333c.88.161.432 1.443-.104.641zm.761-.021c.292-.286.151.281 0 0m.469.151c-.438-.823.531.344 0 0m-.933-.89c-1.448-1.286 1.823.677.234.24zM9.958 16.5c-.63-.375-.167-2.646.047-1.094c.609-.198-.036.802.417.792c-.068.63-.271.859-.464.302m1.532.906c.063-.682.13.469 0 0m-.266-.265c.068-.292.005.344 0 0m-5.13-3.474c-.932-1.286 2.703 1.297.594.323c-.219-.057-.484-.078-.594-.323m2.953 1.567c-.089-1.083.198.177 0 0m2.245 1.438c.172-.615.01.406 0 0m-5.058-3.495c.552-.12 2.292.969.693.313c-.177-.198-.552-.109-.693-.313m4.745 2.365c.063-1.104.333-.661.005.156zm-4.333-2.75c.224-.328-.599-1.495.12-.417c.307.245.896.411.375.516c.818.719-.198.193-.495-.099m4.099 2.406c.156-1.26.141.734 0 0M6.177 11.63c.172-.073.089.229 0 0m1.068.636c.276-.578.505.646 0 0m3.015 1.682c0-.224.057.318 0 0m-.171-.391c-.417-1.031.391.547 0 0m-.261-.677c-.068-.427.245.536 0 0m.422-.682c-.286-.505.365-2.229.432-1.161c-.302.833-.083 1.302.125.182c.391-.88-.083 1.74-.557.979m.427-2.563c.125-.156.031.182 0 0m-.713 14.151c-.172-.151.021.094 0 0m1.479.745c.818.214.818-.125.073-.224c-.401-.375-1.661-.771-.531-.047c.073.188.313.182.453.271zm-2.922-1.937c.453.339 1.703.958.641.125c.359-.411-.682-.635-.339-.911c-.875-.542-.693-.49-.073-.474c-1.063-.474.151-.438.094-.682c-.411-.078-2.026-.719-1.073.052c-.969-.49-.234.188-.526.115c-.99-.271.88.755-.156.5c.568.448 1.531 1.151.24.474c-.172.245.922.615 1.193.802zm1.547.89c1.88.604-.922-.745 0 0m7.916 4.797c.026-.375-.255.318 0 0m.818.344c.432-.422.016.667.719-.104c.005-.552-.021-.88-.807-.208c-.219.12-.313.63.089.313zm-12.927-8.12c-.13-.521-.932-.521 0 0m.87.573c-.323-.536-1.151-.484 0 0m4.948 2.985c.484.427 2.219.313.589.052c-.245-.359-1.536-.271-.589-.052m6.797 4.197c.745-.625-.719.276 0 0m1.546 1.058c.005-.198-.318.089 0 0m0-.276c.823-.875-.797.052 0 0M3.74 18.719c-.703-1-.438-1.453-1.115-2.266c-.125-.63-1.156-2.047-.531-.542c.573.875.745 2.234 1.646 2.807zM19.781 28.76c1.516-.974-.62-.422 0 0m1.157.454c.76-.646-.479-.135 0 0M5.62 19.401c.219-.323-.557-.042 0 0m15.073 9.505c.734-.474-.167-.401-.13.042zm-9.959-6.281c-.026-.318-.391.026 0 0m.615.354c-.198-.396-.302.063 0 0m10.526 6.25c.938-.682-.573-.135-.198.125zm-.359-.177c.766-.641-.813.286 0 0m1.838 1.224c.516-.344-.625-.109 0 0M6.094 19.167c.688.156 2.755 1.698 1.536.109c-.625-.188-.25-1.714-.891-1.443c.427.714.354 1.021-.542.568c-1.13-.547-.635.276-.417.5c-.297.068.401.26.313.266zm-3.141-2.479c.12-.51-1.141-2.807-.599-1.151c.198.344.177 1.005.599 1.151m5.761 3.557c-.354-.297-.016-.047 0 0m.875.203c0-.542-.964-.219 0 0m7.578 4.776c-.146-.37-.573-.01 0 0m.364.266c-.052-.208-.208.036 0 0m3.005 1.89c.286-.214-.359-.026 0 0M4.521 17.089c.828-.323-.885-.229 0 0M16.5 24.635c-.01-.536-.526.135 0 0M4.193 16.328c.531-.182-.49-.12 0 0m1.541.745c-.01-.177-.161.068 0 0m18.787 11.521c.682-.135 2.24.349 2.49-.182c-.828-.016-2.87-.583-2.964.135l.182.031zM6.224 17.198c.01-.542-.422-.021 0 0m-4.052-2.813c-.182-1.031-.698-.156 0 0m.969.245c.01-.333-.885-.302 0 0m.552.271c-.161-.13-.125.161 0 0m3.468 2.224c.167-.146-.385-.109 0 0m-3.838-2.833c-.094-.781-1.12-.12 0 0m-1.979-1.287c-.026-.359-.193.135 0 0m.291-.224c-.047-.427-.25.052 0 0m1.631.974c.688-.271-1.255-.563-.141-.052zm21.776 13.448c.443-.401-.557-.125 0 0m2.635 1.365c.172-.521-.448.068 0 0M3.432 12.901c.073-.505-.547.099 0 0m-2.317-1.552c-.125-.714-.104-1.964 1.083-1.542c-1.589.318 1.099 1.974.76.667c.667.031 1.307-.396.953.255c1.318-.146 2.229-1.286 3.5-1.13c.99-.13 2.073-.229 3.141-.625c.875-.068 1.719-1.01 1.24-1.568c-1.198-.104-2.448.047-3.771.307c-1.464.307-2.792.885-4.271 1.135c-1.443.193.286.531-.125.609c-.75.26.896.438-.099.708c-.609-.115-1.25-.328-.99-.974c-1.38.177-2.594.755-1.5 2.156zm3.328-1.693c.323-1.193 1.734.979.531.156c-.146-.104-.38-.193-.531-.156m.062-.578c.464-.344.245.193 0 0m.594.011c.042-.547 1.354.292.214.198zm.807-.329c.297-.344.089.313 0 0m.209-.135c.495-.594 2.797-.38 1.109-.057c-.448-.339-.797.198-1.109.057m3.005-.464c-.078-1.62 1.49.578 0 0m.849-.005c.313-.818 1.208-.328.146-.167c.021.089-.031.422-.146.167m-6.875 4.328c.932-.573-.984-.495 0 0m.687.193c.328-.349-.708-.146 0 0m-2.026-1.443c.531-.406-.625-.156 0 0m27.474 17.188c.016-.474-.406.214 0 0m-2.791-1.906c.078-.547-.359.047 0 0m3.557 2.088c.745 0 2.25-.229.635-.229c-.255.042-1.479.031-.635.229M4.385 12.339c.604-.042.943-.661-.115-.625c-1.641-.172 1.443.557-.208.349c-.224.146.313.318.323.276m.532.27c-.063-.391-.188.203 0 0m.625-1.677c.266-.323-.359-.089 0 0m-2-3.343c1.078-.365 2.547-.776 3.052.177c-.516-.62-.208-1.229.281-.323c.688.922 1.031-.417.583-.724c.51.635 1.089.932.344.036c.813-.974-1.63.13-2.188.12c-.266.12-2.76.635-2.068.714zm.63-1.204c.615-.464 2.12.271 1.151-.464c-.089-.078-2.115.557-1.151.464m2.234.089c.719.021-.307-.958.547-.516c-.141-.458-.995-.547-1.417-.729c-.234.422.484 1.25.87 1.245M4.568 4.448c.245-.333-.438.172 0 0m.911.219c1.151-.151-.297-.495-.234-.01zM3.776 3.333c-.813-1.063 1.526.182.703-.932c-.698-.552-1.365.625-.703.932m10.432 5.62c.375-.661-1.542-.891-.25-.234c.12.042.089.281.25.234"/></svg>`
      },
      {
        name: 'Node.js',
        rawSvg: `<svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 24 24">
                  <path fill="currentColor" d="M12 1.85c-.27 0-.55.07-.78.2l-7.44 4.3c-.48.28-.78.8-.78 1.36v8.58c0 .56.3 1.08.78 1.36l7.44 4.3c.46.26 1.04.26 1.5 0l7.44-4.3c.48-.28.78-.8.78-1.36V7.71c0-.56-.3-1.08-.78-1.36L12.78 2.05c-.23-.13-.51-.2-.78-.2"/>
                 </svg>`
      },
      {
        name: 'Express',
        rawSvg: `<svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 24 24">
                  <path fill="currentColor" d="M24 18.588a1.529 1.529 0 0 1-1.895-.72l-3.45-4.771-.5-.667-4.003 5.444a1.466 1.466 0 0 1-1.802.708l5.158-6.92-4.798-6.251a1.595 1.595 0 0 1 1.9.666l3.576 4.83 3.596-4.81a1.435 1.435 0 0 1 1.788-.668L21.708 7.9l-2.522 3.283a.666.666 0 0 0 0 .994l4.804 6.412z"/>
                  <path fill="currentColor" d="M.002 11.576l.42-2.075c1.154-4.103 5.858-5.81 9.094-3.27 1.895 1.489 2.368 3.597 2.275 5.973H1.116C.943 16.447 4.005 19.009 7.92 17.7a4.078 4.078 0 0 0 2.582-2.876c.207-.666.548-.78 1.174-.588a5.417 5.417 0 0 1-2.589 3.957c-2.864 1.807-6.924.018-8.425-2.735-.777-1.427-.746-2.165-.011-3.861z"/>
                 </svg>`
      },
      {
        name: 'SQL Server',
        rawSvg: `<svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 24 24"><path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 8a2 2 0 0 1 2 2v4a2 2 0 1 1-4 0v-4a2 2 0 0 1 2-2m5 0v8h4m-8-1l1 1M3 15a1 1 0 0 0 1 1h2a1 1 0 0 0 1-1v-2a1 1 0 0 0-1-1H4a1 1 0 0 1-1-1V9a1 1 0 0 1 1-1h2a1 1 0 0 1 1 1"/></svg>`
      },
            {
        name: 'PostgreSQL',
        rawSvg: `<svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 24 24"><path fill="currentColor" d="M17.128 2.513c-1.368.091-2.716.444-3.817 1.112a11.2 11.2 0 0 0-1.441.967c-.11.09-.2.18-.29.27c-.09-.09-.18-.18-.29-.27a11.2 11.2 0 0 0-1.441-.967C8.738 2.957 7.39 2.604 6.022 2.513c-1.368-.091-2.716.18-3.817.722c-.55.271-1.01.632-1.351 1.083c-.341.451-.562.993-.562 1.625v9.514c0 .632.221 1.174.562 1.625c.341.451.801.812 1.351 1.083c1.101.542 2.449.813 3.817.722c1.368-.091 2.716-.444 3.817-1.112c.55-.334 1.01-.722 1.351-1.174c.341.452.801.84 1.351 1.174c1.101.668 2.449 1.021 3.817 1.112c1.368.091 2.716-.18 3.817-.722c.55-.271 1.01-.632 1.351-1.083c.341-.451.562-.993.562-1.625V5.943c0-.632-.221-1.174-.562-1.625c-.341-.451-.801-.812-1.351-1.083c-1.101-.542-2.449-.813-3.817-.722M12 5.312c.11.09.2.18.29.27c.09.09.18.18.29.27v11.296c-.11-.09-.2-.18-.29-.27c-.09-.09-.18-.18-.29-.27z"/></svg>`
      },
      {
        name: 'MySQL',
        rawSvg: `<svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 24 24"><path fill="currentColor" d="M16.405 5.501c-.115 0-.193.014-.274.033v.013h.014c.054.104.146.18.214.273c.054.107.1.214.154.32l.014-.015c.094-.066.14-.172.14-.333c-.04-.047-.046-.094-.08-.14c-.04-.067-.126-.1-.18-.153zM5.77 18.695h-.927a50.854 50.854 0 0 0-.27-4.41h-.008l-1.41 4.41H2.45l-1.4-4.41h-.01a72.892 72.892 0 0 0-.195 4.41H0c.055-1.966.192-3.81.41-5.53h1.15l1.335 4.064h.008l1.347-4.064h1.095c.242 2.015.384 3.86.428 5.53zm4.017-4.08c-.378 2.045-.876 3.533-1.492 4.46c-.482.716-1.01 1.073-1.583 1.073c-.153 0-.34-.046-.566-.138v-.494c.11.017.24.026.386.026c.268 0 .483-.075.647-.222c.197-.18.295-.382.295-.605c0-.155-.077-.47-.23-.944L6.23 14.615h.91l.727 2.36c.164.536.233.91.205 1.123c.4-1.064.678-2.227.835-3.483zm12.325 4.08h-2.63v-5.53h.885v4.85h1.745zm-3.32.135l-1.016-.5c.09-.076.177-.158.255-.25c.433-.506.648-1.258.648-2.253c0-1.83-.718-2.746-2.155-2.746c-.704 0-1.254.232-1.65.697c-.43.508-.646 1.256-.646 2.245c0 .972.19 1.686.574 2.14c.35.41.877.615 1.583.615c.264 0 .506-.033.725-.098l1.325.772l.36-.622zM15.5 17.588c-.225-.36-.337-.94-.337-1.736c0-1.393.424-2.09 1.27-2.09c.443 0 .77.167.977.5c.224.362.336.936.336 1.723c0 1.404-.424 2.108-1.27 2.108c-.445 0-.77-.167-.978-.5zm-1.658-.425c0 .47-.172.856-.516 1.156c-.344.3-.803.45-1.384.45c-.543 0-1.064-.172-1.573-.515l.237-.476c.438.22.833.328 1.19.328c.332 0 .593-.073.783-.22a.754.754 0 0 0 .3-.615c0-.33-.23-.61-.648-.845c-.388-.213-1.163-.657-1.163-.657c-.422-.307-.632-.636-.632-1.177c0-.45.157-.81.47-1.085c.315-.278.72-.415 1.22-.415c.512 0 .98.136 1.4.41l-.213.476a2.726 2.726 0 0 0-1.064-.23c-.283 0-.502.068-.654.206a.685.685 0 0 0-.248.524c0 .328.234.61.666.85c.393.215 1.187.67 1.187.67c.433.305.648.63.648 1.168zm9.382-5.852c-.535-.014-.95.04-1.297.188c-.1.04-.26.04-.274.167c.055.053.063.14.11.214c.08.134.218.313.346.407c.14.11.28.216.427.31c.26.16.555.255.81.416c.145.094.293.213.44.313c.073.05.12.14.214.172v-.02c-.046-.06-.06-.147-.105-.214c-.067-.067-.134-.127-.2-.193a3.223 3.223 0 0 0-.695-.675c-.214-.146-.682-.35-.77-.595l-.013-.014c.146-.013.32-.066.46-.106c.227-.06.435-.047.67-.106c.106-.027.213-.06.32-.094v-.06c-.12-.12-.21-.283-.334-.395a8.867 8.867 0 0 0-1.104-.823c-.21-.134-.476-.22-.697-.334c-.08-.04-.214-.06-.26-.127c-.12-.146-.19-.34-.275-.514a17.69 17.69 0 0 1-.547-1.163c-.12-.262-.193-.523-.34-.763c-.69-1.137-1.437-1.826-2.586-2.5c-.247-.14-.543-.2-.856-.274c-.167-.008-.334-.02-.5-.027c-.11-.047-.216-.174-.31-.235c-.38-.24-1.364-.76-1.644-.072c-.18.434.267.862.422 1.082c.115.153.26.328.34.5c.047.116.06.235.107.356c.106.294.207.622.347.897c.073.14.153.287.247.413c.054.073.146.107.167.227c-.094.136-.1.334-.154.5c-.24.757-.146 1.693.194 2.25c.107.166.362.534.703.393c.3-.12.234-.5.32-.835c.02-.08.007-.133.048-.187v.015c.094.188.188.367.274.555c.206.328.566.668.867.895c.16.12.287.328.487.402v-.02h-.015c-.043-.058-.1-.086-.154-.133a3.445 3.445 0 0 1-.35-.4a8.76 8.76 0 0 1-.747-1.218c-.11-.21-.202-.436-.29-.643c-.04-.08-.04-.2-.107-.24c-.1.146-.247.273-.32.453c-.127.288-.14.642-.188 1.01c-.027.007-.014 0-.027.014c-.214-.052-.287-.274-.367-.46c-.2-.475-.233-1.238-.06-1.785c.047-.14.247-.582.167-.716c-.042-.127-.174-.2-.247-.303a2.478 2.478 0 0 1-.24-.427c-.16-.374-.24-.788-.414-1.162c-.08-.173-.22-.354-.334-.513c-.127-.18-.267-.307-.368-.52c-.033-.073-.08-.194-.027-.274c.014-.054.042-.075.094-.09c.088-.072.335.022.422.062c.247.1.455.194.662.334c.094.066.195.193.315.226h.14c.214.047.455.014.655.073c.355.114.675.28.962.46a5.953 5.953 0 0 1 2.085 2.286c.08.154.115.295.188.455c.14.33.313.663.455.982c.14.315.275.636.476.897c.1.14.502.213.682.286c.133.06.34.115.46.188c.23.14.454.3.67.454c.11.076.443.243.463.378z"/></svg>`
      },
      {
        name: 'Firebase',
        rawSvg: `<svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 24 24"><path fill="currentColor" d="m20 18.69l-7.3 4.05q-.75.39-1.5 0L4 18.69L17.05 5.54l.35-.1c.3 0 .47.13.5.4zM9.35 5.74L4.8 13.29L6.7 1.34c.03-.27.2-.4.5-.4c.2 0 .33.06.4.25l2.15 3.95zM13.85 7L4.3 16.59l7.25-12.3c.1-.2.25-.29.45-.29s.33.09.4.29z"/></svg>`
      },
      {
        name: 'MongoDB',
        rawSvg: `<svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 24 24"><path fill="currentColor" fill-rule="evenodd" d="M7.294 11.804c0-3.966 2.14-6.417 3.533-8.014C11.501 3.02 12 2.447 12 2c0 .447.5 1.019 1.172 1.79c1.394 1.597 3.534 4.048 3.534 8.014c0 4.326-2.75 6.95-4.077 7.765L12.37 22h-.707l-.29-2.43c-1.326-.813-4.079-3.437-4.079-7.766m4.064 6.7L12 9.06l.649 9.446l-.65.75z" clip-rule="evenodd"/></svg>`
      },
      {
        name: 'Git',
        rawSvg: `<svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 24 24">
                  <path fill="currentColor" d="M21.62 11.108L12.892 2.38c-.51-.51-1.334-.51-1.844 0L9.296 4.132l2.744 2.744c.544-.184 1.168-.076 1.612.37c.448.448.556 1.07.37 1.616l2.648 2.648c.544-.184 1.168-.076 1.612.37a1.134 1.134 0 0 1 0 1.608c-.453.453-1.188.453-1.641 0a1.134 1.134 0 0 1-.278-1.237l-2.47-2.47v6.5a1.134 1.134 0 0 1 .3.817c0 .627-.513 1.134-1.14 1.134s-1.14-.507-1.14-1.134c0-.313.128-.597.334-.804V9.215a1.134 1.134 0 0 1-.612-1.49L8.392 5.482L2.38 11.494c-.51.51-.51 1.334 0 1.844l8.728 8.728c.51.51 1.334.51 1.844 0l8.668-8.668c.51-.51.51-1.334 0-1.844z"/>
                 </svg>`
      },
      {
        name: 'RESTful API',
        rawSvg: `<svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 24 24"><path fill="currentColor" d="m12 14l-2-2l2-2l2 2zM9.875 8.125l-2.5-2.5L12 1l4.625 4.625l-2.5 2.5L12 6zm-4.25 8.5L1 12l4.625-4.625l2.5 2.5L6 12l2.125 2.125zm12.75 0l-2.5-2.5L18 12l-2.125-2.125l2.5-2.5L23 12zM12 23l-4.625-4.625l2.5-2.5L12 18l2.125-2.125l2.5 2.5z"/></svg>`
      },
      {
        name: 'Excel',
        rawSvg: `<svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 24 24"><path fill="currentColor" d="M14 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V8zm-1 13l-2.5-3.5L8 15H6l3.5-5L6 5h2l2.5 3.5L13 5h2l-3.5 5l3.5 5zm1-8V3.5L19.5 9z"/></svg>`
      },
      {
        name: 'Power BI',
        rawSvg: `<svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 24 24"><path fill="currentColor" d="M10 2h4v20h-4zm-6 6h4v12H4zm12 4h4v8h-4z"/></svg>`
      }
    ];

    // Define which technologies belong to each category
    const webTechs = ['Angular', 'TailwindCSS', 'TypeScript', 'Flask', 'Node.js', 'Express', 'SQL Server', 'PostgreSQL', 'MySQL', 'Firebase', 'MongoDB', 'Git', 'RESTful API'];
    const dataTechs = ['PostgreSQL', 'MySQL', 'SQL Server', 'Excel', 'Power BI'];
    
    // Filter technologies based on active category
    const filteredTechData = category === 'web' 
      ? rawTechData.filter(tech => webTechs.includes(tech.name))
      : rawTechData.filter(tech => dataTechs.includes(tech.name));
    
    // Sanitize SVG content for safe display
    return filteredTechData.map(tech => ({
      name: tech.name,
      rawSvg: tech.rawSvg,
      sanitizedIcon: this.sanitizer.bypassSecurityTrustHtml(tech.rawSvg)
    }));
  });

  // Get total number of technologies
  readonly techCount = computed(() => 
    this.uniqueTechnologies().length
  );

  // Determine if entry animation should show
  readonly showEntryAnimation = computed(() => 
    !this.animationCompleted() && this.shouldShowAnimationForThisSession()
  );

  // Check if animation should show based on navigation type
  private shouldShowAnimationForThisSession(): boolean {
    if (typeof window === 'undefined') return true; 
    
    const cameFromInternalNav = sessionStorage.getItem('portfolioInternalNavigation') === 'true';
    
    if (cameFromInternalNav) {
      sessionStorage.removeItem('portfolioInternalNavigation');
      return false;
    }
    
    return true;
  }

  // Check if animation is currently fading out
  readonly isAnimationFadingOut = computed(() => 
    this.animationFadingOut()
  );

  // Handle animation fade out start
  onAnimationFadeOutStarted(): void {
    this.animationFadingOut.set(true);
  }

  // Handle entry animation completion
  onEntryAnimationComplete(): void {
    setTimeout(() => {
      this.animationCompleted.set(true);
    }, 300);
  }

  // Change active category filter with animation
  setCategory(category: 'web' | 'data'): void {
    if (this.activeCategory() === category) return; // Don't animate if same category
    
    // Start fade out
    this.isTransitioning.set(true);
    
    // Wait for fade out, then change category and fade in
    setTimeout(() => {
      this.activeCategory.set(category);
      
      // End transition after fade in completes
      setTimeout(() => {
        this.isTransitioning.set(false);
      }, 200);
    }, 200);
  }

  // Check if category is active
  isCategoryActive(category: 'web' | 'data'): boolean {
    return this.activeCategory() === category;
  }

  // Expose transition state for template
  get transitioning(): boolean {
    return this.isTransitioning();
  }
}

